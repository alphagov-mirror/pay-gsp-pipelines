---
apiVersion: concourse.k8s.io/v1beta1
kind: Pipeline
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: stubs
spec:
  exposed: true
  config:
    harbor_source: &harbor_source
      username: ((harbor.harbor_username))
      password: ((harbor.harbor_password))
      harbor:
        url: ((harbor.harbor_url))
        prevent_vul: "false"
      notary:
        url: ((harbor.notary_url))
        root_key: ((harbor.root_key))
        delegate_key: ((harbor.ci_key))
        passphrase:
          root: ((harbor.notary_root_passphrase))
          snapshot: ((harbor.notary_snapshot_passphrase))
          targets: ((harbor.notary_targets_passphrase))
          delegation: ((harbor.notary_delegation_passphrase))

    resource_types:
      - name: harbor
        type: registry-image
        privileged: true
        source:
          repository: govsvc/concourse-harbor-resource
          tag: latest

    resources:
      - name: pay-gsp
        type: git
        icon: github-circle
        source:
          username: re-autom8-ci
          password: ((github.api-token))
          uri: https://github.com/alphagov/pay-gsp-pipelines
          branch: develop
          paths:
            - tasks
            - charts/stubs

      - name: chart
        type: github-release
        icon: archive
        source:
          owner: alphagov
          repository: pay-gsp-pipelines
          access_token: ((github.api-token))
          tag_filter: "stubs-v?([^v].*)"
          release: false
          pre_release: true

      - name: release
        type: github-release
        icon: archive
        source:
          owner: alphagov
          repository: pay-gsp-pipelines
          access_token: ((github.api-token))
          tag_filter: "stubs-v?([^v].*)"
          release: true
          pre_release: false

      - name: endtoend-src
        type: git
        icon: github-circle
        source:
          username: re-autom8-ci
          password: ((github.api-token))
          uri: https://github.com/alphagov/pay-endtoend

      - name: endtoend-image
        type: harbor
        icon: docker
        source:
          <<: *harbor_source
          repository: registry.((cluster.domain))/pay/endtoend

      - name: stubs-src
        type: git
        icon: github-circle
        source:
          username: re-autom8-ci
          password: ((github.api-token))
          uri: https://github.com/alphagov/pay-stubs

      - name: stubs-image
        type: harbor
        icon: docker
        source:
          <<: *harbor_source
          repository: registry.((cluster.domain))/pay/stubs

      - name: demo-service-src
        type: git
        icon: github-circle
        source:
          username: re-autom8-ci
          password: ((github.api-token))
          uri: https://github.com/alphagov/pay-demo-service

      - name: demo-service-image
        type: harbor
        icon: docker
        source:
          <<: *harbor_source
          repository: registry.((cluster.domain))/pay/demo-service

    jobs:
      - name: build-endtoend
        serial_groups: [endtoend]
        plan:
        - get: pay-gsp
        - get: endtoend-src
          trigger: true
        - task: generate-labels
          input_mapping: { repo: endtoend-src }
          file: pay-gsp/tasks/generate-labels.yaml
        - put: endtoend-image
          params:
            build: endtoend-src
            tag_file: endtoend-src/.git/short_ref
            labels_file: labels/labels.json
            tag_as_latest: true

      - name: build-stubs
        serial_groups: [stubs]
        plan:
        - get: pay-gsp
        - get: stubs-src
          trigger: true
        - task: generate-labels
          input_mapping: { repo: stubs-src }
          file: pay-gsp/tasks/generate-labels.yaml
        - put: stubs-image
          params:
            build: stubs-src
            tag_file: stubs-src/.git/short_ref
            labels_file: labels/labels.json
            tag_as_latest: true

      - name: build-demo-service
        serial_groups: [demo-service]
        plan:
        - get: pay-gsp
        - get: demo-service-src
          trigger: true
        - task: generate-labels
          input_mapping: { repo: demo-service-src }
          file: pay-gsp/tasks/generate-labels.yaml
        - put: demo-service-image
          params:
            build: demo-service-src
            tag_file: demo-service-src/.git/short_ref
            labels_file: labels/labels.json
            tag_as_latest: true

      - name: pre-release
        serial_groups: [endtoend, stubs, demo-service, release]
        plan:
        - get: pay-gsp
          trigger: true
        - get: endtoend-image
          passed: [build-endtoend]
          trigger: true
        - get: stubs-image
          passed: [build-stubs]
          trigger: true
        - get: demo-service-image
          passed: [build-demo-service]
          trigger: true
        - task: update-app-versions
          file: pay-gsp/tasks/update-app-versions-stubs.yaml
        - task: helm-package
          file: pay-gsp/tasks/helm-package.yaml
          vars:
            chart_name: stubs
        - put: chart
          params:
            name: chart-version/name
            tag: chart-version/tag
            tag_prefix: stubs-
            globs:
              - chart-package/*

      - name: deploy
        serial: true
        serial_groups: [release]
        plan:
          - get: pay-gsp
            passed: [pre-release]
          - get: chart
            passed: [pre-release]
            trigger: true
          - task: helm-render
            file: pay-gsp/tasks/helm-render.yaml
            vars:
              release_name: stubs
          - task: deploy
            file: pay-gsp/tasks/deploy.yaml
            vars:
              release_name: stubs

      - name: release
        serial_groups: [release]
        plan:
        - get: chart
          passed: [deploy]
          trigger: true
        - put: release
          params:
            name: chart/tag
            tag: chart/tag
            globs:
              - chart/*
