platform: linux

image_resource:
  type: docker-image
  source:
    repository: govsvc/task-toolbox
    tag: latest

params:
  TEST_SUITE: ((suite))
  KUBERNETES_SERVICE_ACCOUNT: ((namespace-deployer))
  KUBERNETES_TOKEN: ((namespace-deployer.token))
  KUBERNETES_API: kubernetes.default.svc
  RELEASE_NAMESPACE: ((namespace-deployer.namespace))
  RELEASE_NAME: ((environment))

run:
  path: /bin/bash
  args:
    - -c
    - |
      set -o errexit -o nounset -o pipefail

      echo "configuring kubectl"
      echo "${KUBERNETES_SERVICE_ACCOUNT}" | jq -r .["ca.crt"] > ca.crt
      kubectl config set-cluster self --server=https://kubernetes.default --certificate-authority=ca.crt
      kubectl config set-credentials deployer --token "${KUBERNETES_TOKEN}"
      kubectl config set-context deployer --user deployer --cluster self
      kubectl config use-context deployer

      pod=$(kubectl get po -l app=endtoend -n "$RELEASE_NAMESPACE" -o jsonpath='{.items[*].metadata.name}')

      echo "running $TEST_SUITE endtoend tests in pod $pod"
      kubectl exec -it "$pod" -n "$RELEASE_NAMESPACE" -c endtoend -- "/app/bin/e2e-$TEST_SUITE"
